-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Interface.Node exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (FragmentSelectionSet(FragmentSelectionSet), SelectionSet(SelectionSet))
import Json.Decode as Decode


{-| Select only common fields from the interface.
-}
commonSelection : (a -> constructor) -> SelectionSet (a -> constructor) Api.Interface.Node
commonSelection constructor =
    Object.selection constructor


{-| Select both common and type-specific fields from the interface.
-}
selection : (Maybe typeSpecific -> a -> constructor) -> List (FragmentSelectionSet typeSpecific Api.Interface.Node) -> SelectionSet (a -> constructor) Api.Interface.Node
selection constructor typeSpecificDecoders =
    Object.interfaceSelection typeSpecificDecoders constructor


onGame : SelectionSet decodesTo Api.Object.Game -> FragmentSelectionSet decodesTo Api.Interface.Node
onGame (SelectionSet fields decoder) =
    FragmentSelectionSet "Game" fields decoder


onExercise : SelectionSet decodesTo Api.Object.Exercise -> FragmentSelectionSet decodesTo Api.Interface.Node
onExercise (SelectionSet fields decoder) =
    FragmentSelectionSet "Exercise" fields decoder


onWord : SelectionSet decodesTo Api.Object.Word -> FragmentSelectionSet decodesTo Api.Interface.Node
onWord (SelectionSet fields decoder) =
    FragmentSelectionSet "Word" fields decoder


{-| The id of the object.
-}
id : Field Api.Scalar.Id Api.Interface.Node
id =
    Object.fieldDecoder "id" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map Api.Scalar.Id)
