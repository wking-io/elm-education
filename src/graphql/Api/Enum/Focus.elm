-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Enum.Focus exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Word -
  - Group -
  - Beginning -
  - Ending -
  - Vowel -

-}
type Focus
    = Word
    | Group
    | Beginning
    | Ending
    | Vowel


decoder : Decoder Focus
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "Word" ->
                        Decode.succeed Word

                    "Group" ->
                        Decode.succeed Group

                    "Beginning" ->
                        Decode.succeed Beginning

                    "Ending" ->
                        Decode.succeed Ending

                    "Vowel" ->
                        Decode.succeed Vowel

                    _ ->
                        Decode.fail ("Invalid Focus type, " ++ string ++ " try re-running the graphqelm CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Focus -> String
toString enum =
    case enum of
        Word ->
            "Word"

        Group ->
            "Group"

        Beginning ->
            "Beginning"

        Ending ->
            "Ending"

        Vowel ->
            "Vowel"
