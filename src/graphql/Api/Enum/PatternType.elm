-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Enum.PatternType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Connect -
  - Filter -
  - Identify -
  - Memorize -
  - Order -

-}
type PatternType
    = Connect
    | Filter
    | Identify
    | Memorize
    | Order


decoder : Decoder PatternType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "Connect" ->
                        Decode.succeed Connect

                    "Filter" ->
                        Decode.succeed Filter

                    "Identify" ->
                        Decode.succeed Identify

                    "Memorize" ->
                        Decode.succeed Memorize

                    "Order" ->
                        Decode.succeed Order

                    _ ->
                        Decode.fail ("Invalid PatternType type, " ++ string ++ " try re-running the graphqelm CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : PatternType -> String
toString enum =
    case enum of
        Connect ->
            "Connect"

        Filter ->
            "Filter"

        Identify ->
            "Identify"

        Memorize ->
            "Memorize"

        Order ->
            "Order"
